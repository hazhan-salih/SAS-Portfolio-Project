/* we start with getting an overview of the Data */

proc sql outobs=20;

select *
from work.import;

quit;

/* Let's see how the people with the highest income are responding to our campaign and how much they spend on our products */

proc sql outobs=10;

title 'Top 10 Highest income';

select 
	Income,
	MntWines,
	MntFruits,
	MntMeatProducts,
	MntFishProducts,
	MntSweetProducts,
	MntGoldProds,
	AcceptedCmpOverall
from work.import
order by income desc;

quit;

/* 

Result:
							Top 10 Highest income

	Income	MntWines	MntFruits	MntMeatProducts	MntFishProducts	MntSweetProducts	MntGoldProds	AcceptedCmpOverall
	113734	6		2		3		1		262			3		0
	105471	1009		181		104		202		21			207		2
	102692	168		148		444		32		172			148		4
	102160	763		29		138		76		176			58		3
	101970	722		27		102		44		72			168		3
	98777	1000		19		711		125		115			38		1
	96876	908		43		735		40		194			21		3
	96843	448		71		951		40		17			17		1
	96547	448		21		125		52		101			62		3
	95529	770		29		890		250		27			24		1
	
*/

/* As this is a sample Dataset, let us assume that the person with the highest Income is just interested in our 
sweet products as this can be possible

now we want to see how the 10 households with the least amount of income are behaving */

proc sql outobs=10;

title 'Top 10 lowest income';

select 
	Income,
	MntWines,
	MntFruits,
	MntMeatProducts,
	MntFishProducts,
	MntSweetProducts,
	MntGoldProds,
	AcceptedCmpOverall
from work.import
order by income;

quit;

/*

Result:

							Top 10 lowest income

	Income	MntWines	MntFruits	MntMeatProducts	MntFishProducts	MntSweetProducts	MntGoldProds	AcceptedCmpOverall
	1730	1		1		3		1		1			1		0
	2447	1		1		1725		1		1			1		0
	3502	2		1		1		0		0			1		0
	4023	5		0		1		1		1			1		0
	4428	16		4		12		2		4			321		0
	4861	2		1		1		1		0			1		0
	5305	12		4		7		1		3			5		0
	5648	28		0		6		1		1			13		1
	6560	67		11		26		4		3			262		0
	6835	107		2		12		2		2			12		0

*/

/* Something is not right. 
In Row 2 we can see that in the Column MntMeatProducts the household with the second-lowest income is buying
more than nearly everyone else in 2 years.

After looking up the Data, there was a mistake. We should replace the value with the correct one "5" */

proc sql;

update work.import
set MntMeatProducts = 5
where Income=2447.0;

quit;

/* 

Result of previous query after you ran above query:

						Top 10 lowest income							
							
	Income	MntWines	MntFruits	MntMeatProducts	MntFishProducts	MntSweetProducts	MntGoldProds	AcceptedCmpOverall
	1730	1		1		3		1		1			1		0
	2447	1		1		5		1		1			1		0
	3502	2		1		1		0		0			1		0
	4023	5		0		1		1		1			1		0
	4428	16		4		12		2		4			321		0
	4861	2		1		1		1		0			1		0
	5305	12		4		7		1		3			5		0
	5648	28		0		6		1		1			13		1
	6560	67		11		26		4		3			262		0
	6835	107		2		12		2		2			12		0

*/

/* Now we have the correct value, as we have no Primary Key in this Dataset I made sure to pick out a value that was unique, 
not typical but as this is a Dataset i am only using for this Project this should be appropriate

let's see in which age group we got the most acceptance for our campaign  */

proc sql;

Title 'Agegroup Response';

select case 
	when Age >=0 and Age <= 45 Then 'Agegroup A'
	Else 'Agegroup B'
	End AS Agegroup,
	SUM(AcceptedCmpOverall) AS AccptdCampaign
from work.import
group by Agegroup;


quit;

/* 

Result:
				Agegroup Response

				Agegroup	AccptdCampaign	 
				Agegroup A	234
				Agegroup B	425
*/

/* With this query, we can see that people in the Age group 45 or above have a higher acceptance for our campaign.
Maybe we can change the concept of the Cmp to address a younger target group, 
as there seems to be a big group that we can still convince

after getting used to the Dataset, we want to see how the Campaign helped our Purchases and create a view Table */

proc sql;

create view CmpSuccess AS
select 
	COUNT(*) AS Participant,
	AcceptedCmpOverall,
	SUM(NumCatalogPurchases) AS CatalogTotal,
	SUM(NumDealsPurchases) AS DealsTotal,
	SUM(NumStorePurchases) AS StoreTotal,
	SUM( NumWebPurchases) as WebTotal,
	SUM(Calculated CatalogTotal,Calculated DealsTotal,Calculated StoreTotal,Calculated WebTotal) AS Total,
	SUM(NumWebVisitsMonth) as VisitOverallLastMonth
from work.import
group by AcceptedCmpOverall
order by AcceptedCmpOverall desc;

quit;

proc sql;

Title 'Campaign success';

Select *
from work.cmpsuccess;

select 
	AcceptedCmpOverall,
	TOTAL/Participant AS PurchasesPPerson,
	VisitOverallLastMonth/Total AS WebvisitPPerson
from work.cmpsuccess
group by  AcceptedCmpOverall
order by AcceptedCmpOverall desc;

quit;

/*

Result:

							Campaign success by Total purchase

	Participant	AcceptedCmpOverall	CatalogTotal	DealsTotal	StoreTotal	WebTotal	Total	VisitOverallLastMonth
	11		4			76		8		91		56		231	43
	44		3			283		49		350		247		929	148
	81		2			443		135		645		452		1675	323
	321		1			1239		722		2109		1635		5705	1648
	1747		0			3786		4198		9637		6648		24269	9605


							Campaign success summed up

				AcceptedCmpOverall	PurchasesPPerson	WebvisitPPerson
				4			21			0.186147
				3			21.11364		0.159311
				2			20.67901		0.192836
				1			17.77259		0.288869
				0			13.89181		0.395772

*/

/* Here we can think about what the result might mean.

Even though we got the most Website visits from potential Customer that did not accept any of our Cmp, 
we have the least Amount of Purchases per person.

This could have a lot of reasons, the most common would be that the AVG Person had to visit our Webshop more often to 
see if they can find something that they need or that the navigation through our website is not optimized for new visits.

Something we should also note is that the people that took part in two, three and four Cmp had a similar Purchase per Person and the Webvisit in the last Month
got reduced by a lot.

what we can deduct from this is that the People taking Part in our Cmp are Buying on AVG more per Person and but are likely visiting our Webshop than when they know 
what they want to buy.

Now we will create a view Table with the SAS Language */

Data Category(KEEP=Age Income Category);

set work.import;

if AcceptedCmp1 = 1 Then Category =  1;
else if AcceptedCmp2 =1 Then Category = 2;
else if AcceptedCmp3 =1 Then Category = 3;
else if AcceptedCmp4 =1 Then Category = 4;
else if AcceptedCmp5 =1 Then Category = 5;
else Category = 0;

run;

/* We will Group the Category to get a better overview on the AVG Income and AVG Age from our customers that 
either got not effected by one of our 5 Cmp or how they behaved depending on which Cmp they participate. */

proc sql;

select 
	COUNT(*) AS Pplcount ,category,
	avg(Income) as Income,
	avg(Age) as Age
from work.category
group by category
order by category desc;

quit;

/*

Result:


			Pplcount	Category	Income		Age
			57		5		81674.16	51.87719
			106		4		63694.92	55.32075
			135		3		45081.66	48.91111
			17		2		63351.71	53.17647
			142		1		78872.63	51.61972
			1747		0		48058.35	50.91471
			
*/

/* From this table, we can see in which income group and Age group the customer that accepted either zero or all 5 Campaigns we started (Column Category).

What we can see first is that the least amount of people accepted only 2 Campaigns.

We can find the customer with the highest AVG Income by the customer that accepted all 5 of our campaigns.

The youngest AVG Age group can be found by the customer that accepted 3 Campaigns, but also the customer with the lowest AVG Income.

What we can also see in this Table is that overall our general customer group is on AVG between 55 - 48 this, so there is also high customer base we can still target

and maybe increase our revenue. */
